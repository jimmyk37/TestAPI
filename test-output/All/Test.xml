<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="12" hostname="DESKTOP-BU76AG9" failures="13" tests="44" name="Test" time="38.238" errors="0" timestamp="2024-07-08T12:28:56 IST">
  <testcase classname="sample.User.VerifyLoginTest" name="testEmptyRequest" time="3.815"/>
  <testcase classname="sample.User.VerifyLoginTest" name="testIncorrectPassword" time="1.201"/>
  <testcase classname="sample.User.VerifyLoginTest" name="testMissingEmail" time="1.19"/>
  <testcase classname="sample.User.VerifyLoginTest" name="testNonexistentUser" time="1.174"/>
  <testcase classname="sample.User.VerifyLoginTest" name="testVerifyLoginSuccess" time="1.218">
    <failure type="java.lang.AssertionError" message="expected [application/json] but found [text/html; charset=utf-8]">
      <![CDATA[java.lang.AssertionError: expected [application/json] but found [text/html; charset=utf-8]
at sample.User.VerifyLoginTest.testVerifyLoginSuccess(VerifyLoginTest.java:30)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- testVerifyLoginSuccess -->
  <testcase classname="sample.User.CreateAccountTest" name="testCreateAccountSuccess" time="1.187">
    <failure type="java.lang.AssertionError" message="expected [201] but found [400]">
      <![CDATA[java.lang.AssertionError: expected [201] but found [400]
at sample.User.CreateAccountTest.testCreateAccountSuccess(CreateAccountTest.java:35)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testCreateAccountSuccess -->
  <testcase classname="sample.User.CreateAccountTest" name="testExistingEmail" time="1.111"/>
  <testcase classname="sample.User.CreateAccountTest" name="testInvalidEmailFormat" time="1.17"/>
  <testcase classname="sample.User.CreateAccountTest" name="testMissingRequiredFields" time="1.205"/>
  <testcase classname="sample.Product.BrandsList" name="testContentType" time="0.001"/>
  <testcase classname="sample.Product.BrandsList" name="testGetAllBrandsListSuccess" time="0.023"/>
  <testcase classname="sample.Product.BrandsList" name="testProductStructure" time="0.178"/>
  <testcase classname="sample.Product.BrandsList" name="testResponseContainsBrands" time="0.038"/>
  <testcase classname="sample.Product.BrandsList" name="testResponseTime" time="0.002"/>
  <testcase classname="sample.Product.BrandsList" name="testSpecificBrandDetails" time="0.083"/>
  <testcase classname="sample.Product.SearchProductTest" name="testContentType" time="0.002">
    <failure type="java.lang.AssertionError" message="expected [application/json] but found [text/html; charset=utf-8]">
      <![CDATA[java.lang.AssertionError: expected [application/json] but found [text/html; charset=utf-8]
at sample.Product.SearchProductTest.testContentType(SearchProductTest.java:41)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- testContentType -->
  <testcase classname="sample.Product.SearchProductTest" name="testInvalidProductName" time="1.195"/>
  <testcase classname="sample.Product.SearchProductTest" name="testMissingRequiredParameter" time="1.16">
    <failure type="java.lang.AssertionError" message="did not expect [200] but found [200]">
      <![CDATA[java.lang.AssertionError: did not expect [200] but found [200]
at sample.Product.SearchProductTest.testMissingRequiredParameter(SearchProductTest.java:100)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- testMissingRequiredParameter -->
  <testcase classname="sample.Product.SearchProductTest" name="testProductStructure" time="0.087"/>
  <testcase classname="sample.Product.SearchProductTest" name="testResponseContainsProducts" time="0.014"/>
  <testcase classname="sample.Product.SearchProductTest" name="testResponseTime" time="0.005"/>
  <testcase classname="sample.Product.SearchProductTest" name="testSearchProductSuccess" time="0.029"/>
  <testcase classname="sample.Product.SearchProductTest" name="testSpecialCharactersInProductName" time="1.207">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;java.util.List.isEmpty()&amp;quot; because the return value of &amp;quot;io.restassured.path.json.JsonPath.getList(String)&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "java.util.List.isEmpty()" because the return value of "io.restassured.path.json.JsonPath.getList(String)" is null
at sample.Product.SearchProductTest.testSpecialCharactersInProductName(SearchProductTest.java:111)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 27 stack frames]]>
    </failure>
  </testcase> <!-- testSpecialCharactersInProductName -->
  <testcase classname="sample.Product.SearchProductTest" name="testSpecificProductDetails" time="0.09">
    <failure type="java.lang.AssertionError" message="expected [Blue Top] but found [null]">
      <![CDATA[java.lang.AssertionError: expected [Blue Top] but found [null]
at sample.Product.SearchProductTest.testSpecificProductDetails(SearchProductTest.java:68)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- testSpecificProductDetails -->
  <testcase classname="sample.Product.SearchProductTest" name="testUnsupportedMethod" time="1.08"/>
  <testcase classname="sample.User.DeleteAccountTest" name="testDeleteAccountSuccess" time="1.157">
    <failure type="java.lang.AssertionError" message="expected [200] but found [404]">
      <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at sample.User.DeleteAccountTest.testDeleteAccountSuccess(DeleteAccountTest.java:31)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 34 stack frames]]>
    </failure>
  </testcase> <!-- testDeleteAccountSuccess -->
  <testcase classname="sample.User.DeleteAccountTest" name="testIncorrectPassword" time="1.165">
    <failure type="java.lang.AssertionError" message="Expected status code is 401 Unauthorized expected [401] but found [404]">
      <![CDATA[java.lang.AssertionError: Expected status code is 401 Unauthorized expected [401] but found [404]
at sample.User.DeleteAccountTest.testIncorrectPassword(DeleteAccountTest.java:125)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- testIncorrectPassword -->
  <testcase classname="sample.User.DeleteAccountTest" name="testInvalidEmailFormat" time="1.142"/>
  <testcase classname="sample.User.DeleteAccountTest" name="testMissingEmailParameter" time="1.177"/>
  <testcase classname="sample.User.DeleteAccountTest" name="testMissingPasswordParameter" time="1.114"/>
  <testcase classname="sample.User.DeleteAccountTest" name="testNonexistentEmail" time="1.121"/>
  <testcase classname="sample.User.GetUserDetailByEmailTest" name="testGetUserDetailByEmailSuccess" time="1.176"/>
  <testcase classname="sample.User.GetUserDetailByEmailTest" name="testInvalidEmailFormat" time="1.082"/>
  <testcase classname="sample.User.GetUserDetailByEmailTest" name="testMissingEmailParameter" time="1.148">
    <failure type="java.lang.AssertionError" message="did not expect [200] but found [200]">
      <![CDATA[java.lang.AssertionError: did not expect [200] but found [200]
at sample.User.GetUserDetailByEmailTest.testMissingEmailParameter(GetUserDetailByEmailTest.java:51)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- testMissingEmailParameter -->
  <testcase classname="sample.User.GetUserDetailByEmailTest" name="testNonexistentEmail" time="1.101"/>
  <testcase classname="sample.Product.ProductsListTest" name="testContentType" time="0.007">
    <failure type="java.lang.AssertionError" message="expected [application/json] but found [text/html; charset=utf-8]">
      <![CDATA[java.lang.AssertionError: expected [application/json] but found [text/html; charset=utf-8]
at sample.Product.ProductsListTest.testContentType(ProductsListTest.java:41)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- testContentType -->
  <testcase classname="sample.Product.ProductsListTest" name="testFilterByCategory" time="0.049">
    <failure type="java.lang.AssertionError" message="No products found for the category expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: No products found for the category expected [false] but found [true]
at sample.Product.ProductsListTest.testFilterByCategory(ProductsListTest.java:77)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- testFilterByCategory -->
  <testcase classname="sample.Product.ProductsListTest" name="testGetAllProductsListSuccess" time="0.027"/>
  <testcase classname="sample.Product.ProductsListTest" name="testInvalidEndpoint" time="1.176">
    <failure type="io.restassured.path.json.exception.JsonPathException" message="Failed to parse the JSON document">
      <![CDATA[io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)
at io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)
at io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)
at io.restassured.path.json.JsonPath.get(JsonPath.java:202)
at io.restassured.path.json.JsonPath.getInt(JsonPath.java:237)
at sample.Product.ProductsListTest.testInvalidEndpoint(ProductsListTest.java:87)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
Caused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading '<', no possible valid JSON value or punctuation could be recognized.
at groovy.json.JsonLexer.nextToken(JsonLexer.java:86)
at groovy.json.JsonLexer$nextToken.call(Unknown Source)
at io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:97)
at io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)
at io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)
at io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)
at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)
... 33 more
... Removed 27 stack frames]]>
    </failure>
  </testcase> <!-- testInvalidEndpoint -->
  <testcase classname="sample.Product.ProductsListTest" name="testProductStructure" time="0.13"/>
  <testcase classname="sample.Product.ProductsListTest" name="testResponseContainsProducts" time="0.02"/>
  <testcase classname="sample.Product.ProductsListTest" name="testResponseTime" time="0.004"/>
  <testcase classname="sample.Product.ProductsListTest" name="testSpecificProductDetails" time="0.112">
    <failure type="java.lang.AssertionError" message="expected [Tops] but found [[usertype:[usertype:Women], category:Tops]]">
      <![CDATA[java.lang.AssertionError: expected [Tops] but found [[usertype:[usertype:Women], category:Tops]]
at sample.Product.ProductsListTest.testSpecificProductDetails(ProductsListTest.java:70)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- testSpecificProductDetails -->
  <testcase classname="sample.Product.ProductsListTest" name="testUnsupportedMethod" time="1.189"/>
  <testcase classname="sample.base.BaseTestClass" name="@BeforeSuite setUpSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUpSuite -->
  <testcase classname="sample.base.BaseTestClass" name="@AfterSuite tearDownSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownSuite -->
  <testcase classname="sample.base.BaseTestClass" name="@BeforeSuite setUpSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUpSuite -->
  <testcase classname="sample.base.BaseTestClass" name="@AfterSuite tearDownSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownSuite -->
  <testcase classname="sample.base.BaseTestClass" name="@BeforeSuite setUpSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUpSuite -->
  <testcase classname="sample.base.BaseTestClass" name="@AfterSuite tearDownSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownSuite -->
  <testcase classname="sample.base.BaseTestClass" name="@AfterSuite tearDownSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownSuite -->
  <testcase classname="sample.base.BaseTestClass" name="@BeforeSuite setUpSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUpSuite -->
  <testcase classname="sample.base.BaseTestClass" name="@BeforeSuite setUpSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUpSuite -->
  <testcase classname="sample.base.BaseTestClass" name="@BeforeSuite setUpSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUpSuite -->
  <testcase classname="sample.base.BaseTestClass" name="@AfterSuite tearDownSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownSuite -->
  <testcase classname="sample.base.BaseTestClass" name="@AfterSuite tearDownSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDownSuite -->
</testsuite> <!-- Test -->
